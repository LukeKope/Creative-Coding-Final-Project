TO-DO

PRESENTATION
- note a specific presentation format requirement
- if we can't experience the project or we can't explore a question in any meaningful way (like let's see the code but we can't see the code)
- Present it in the best way for your project (if people need to run locally, etc)
- Projects due by class time on Monday. Need github repo with the code and any documentation (screenshots, screen recordings)
- Documentation: if it can be downloaded and run locally and is not super complicated, then maybe documentation is just a couple of screenshots
- For me, include the libraries that I used, figure out what to do with the API key, etc.
- Have documentation of the user data flow
- Include instructions of how to get the API key, i.e. sign up and create your own account to get your own key.
- Maybe slack him my key b.c. it takes a day to get Twitter API key then just update/refresh the key once he's done grading



At base level, get the functionalty working. From there, clean up aesthetics 

Data
_________________________________________________________________
1. Get the data flowing and make sure the tweets display to the two cards ✔
2. Set T/F to the correct tweets so user can guess ✔
3. Query from two accounts, display each to the cards ✔
4. Have tweets show randomly in each card so people can't just click the same box each time ✔
5. #--Figure out how to get the .env to work locally without server or maybe run simple server--#
6. Need to figure out how to call function to update the results once user selects a tweet ✔

Get the correct/incorrect to dissapear after each user answer



Aesthetics
_________________________________________________________________
1. Clean up look, make game show aesthetic more aparent
2. Add buttons for users to press to identify correct tweet
3. Add the onload() function to display custom logo, have it animate to the top left? Or just have opacity fade
4. Animations/indicators for correct or incorrect answers
5. Make more assets in illustrator
6. Maybe have a reveal animation when user clicks answer?
7. Have the two cards look more like tweets


IDEAS
__________________________________________________________________
1. Have round counter: when it's at zero, display the text saying welcome, after every correct guess, display whether they're right or wrong ✔
    After ten rounds (counter = 10) say OH that's all we have time for today thanks for playing then end
    Reset counter to 0 on setup (refresh page to restart or look into how to trigger the setup on button click)
2. For the data, make 2 queries in the setup (one to real account one to fake account) and take the array returned, put the text of the tweets in another array ✔
    (see if the API data you get is mutable if so, you could just take the returned array and remove from it whichever tweet is chosen). So we only need 2 initial queries then we can
    just use that data throughout the game and mutate/access the arrays we create in setup. Have the queries and setup happen while the display page loads

3. Going to select random tweets so that they're not the same order each time, therefore we need to remove a tweet from the array if it's picked

4. Have a special bonus round where they're BOTH real trump tweets (then be like oh sorry they're actually both from him)



LIBRARIES USED
_________________________________________________________________
Codebird: https://github.com/jublo/codebird-js
    - Used to make querying to Twitter simpler. It handles a lot of the complex authentication and allows you to make calls to Twitter specifying queries

NPM dotenv package (node project manager): https://github.com/motdotla/dotenv
    - imported the dotenv functionality that lets you read environmental variables so I can hide my API keys


GENERAL NOTES
_________________________________________________________________
1. Codebird documentation isn't great, BUT what you basically need to do is look at the js file. This has all of the GET and POST requests you can make (which match the Twitter docs)
2. In order to make the get request that you want/need, you need to check the twitter docs to see the parameters you need and the name of the GET request. 
    E.g. for the statuses_user_timeline query you need the parameter screen_name, so you need to add that to your params var. So, we used Twitter API docs to provide Codebird
    with the parameters it needed to make the proper query!
3. Note that for the names of the GET requests, if there's an underline in there (like user_timeline), you need to use camelCase (userTimeline)